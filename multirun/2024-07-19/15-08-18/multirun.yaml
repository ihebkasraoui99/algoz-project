hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - lr=1e-3,1e-2
    - wd=1e-4,1e-2
  job:
    name: algoz
    chdir: null
    override_dirname: lr=1e-3,1e-2,wd=1e-4,1e-2
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.1'
    cwd: /home/nanoz-admin/algoz-project
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/nanoz-admin/algoz-project/config
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      module: dev_CNN1D_regression
      hyperparameters: dev_NNR
      test: test_regression
      train: train_regression
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
output_path: ./dev/
algorithm: NNR
modules: CNN1D
mode: train
performance_intervals:
- - 0.5
  - 1
- - 1
  - 3
- - 3
  - 5
- - 5
  - 10
- - 10
  - 20
- - 20
  - 30
- - 30
  - 50
- - 50
  - 70
- - 70
  - 100
- - 100
  - 150
- - 150
  - 200
- - 200
  - 300
paths:
  base_path: /config
  data_train: train/train_regression.yaml
  data_test: test/test_regression.yaml
  hyperparameters: hyperparameters/dev/hyperparameters.yaml
  module: module/dev/module.yaml
train:
  data_paths_train:
  - data:
    - EtOH_DB_V3_2_random.csv
  chips_train:
  - UUT1
  - UUT2
  gases_train:
  - FinalConcEtOH
  minibatch_size_train: 16
  minibatch_step_train: 1
  pre_processing_train:
  - name: SkipData
    percentage: 0
  - name: LimitOfDetection
    gases:
    - FinalConcEtOH
    lod:
    - 0.5
  transform_train:
    x:
    - name: Transpose
test:
  data_paths_test:
  - data: EtOH_DB_V3_2_random.csv
  chips_test:
  - UUT1
  gases_test:
  - FinalConcEtOH
  minibatch_size_test: 16
  minibatch_step_test: 1
  pre_processing_test:
  - name: SkipData
    percentage: 0
  - name: LimitOfDetection
    gases:
    - FinalConcEtOH
    lod:
    - 0.5
  transform_train:
    x:
    - name: Transpose
hyperparameters:
  module: null
  criterion: MSELoss
  optimizer: Adam
  lr: 1.0e-06
  max_epochs: 3
  batch_size: 32
  iterator_train: DataLoader
  iterator_valid: DataLoader
  dataset: Dataset
  train_split:
    predefined_split:
      dataset: test
  iterator_train__shuffle: true
  iterator_valid__shuffle: false
  callbacks:
    Checkpoint:
      monitor: valid_loss_best
      f_params: model_{last_epoch[epoch]}.pt
      f_optimizer: optimizer.pt
      f_criterion: criterion.pt
      f_history: history.json
      f_pickle: null
      fn_prefix: ''
      dirname: checkpoint
      load_best: true
      event_name: event_cp
    LogBestEpoch: {}
    ComparisonTensorBoard:
      logdir: tensorboard_logs
      comparison_list:
      - loss
  predict_nonlinearity: auto
  warm_start: false
  verbose: 1
  device: cpu
module:
  input_dim:
  - 4
  - 16
  conv_map:
  - 8
  - 64
  conv_kernel: 3
  pool_kernel: 2
  mlp_hidden_dims:
  - 100
  - 50
  output_dim: 1
  use_softmax: false
  conv_norm: batch
  pp_conv_norm: instance
  mlp_norm: batch
